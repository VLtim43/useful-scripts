param(
    [switch]$Info,
    [switch]$Test
)

# -------------------------------------------
# Locate and load ../.env
# -------------------------------------------
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
$envPath = Join-Path -Path $scriptDir -ChildPath '..\.env' | Resolve-Path

if (-not (Test-Path $envPath)) {
    Write-Error ".env file not found at $envPath"
    exit 1
}

$envContent = Get-Content -Path $envPath -ErrorAction Stop

foreach ($line in $envContent) {
    $trimmed = $line.Trim()
    if ($trimmed -eq '' -or $trimmed.StartsWith('#')) { continue }

    $kv = $trimmed -split '=', 2
    if ($kv.Count -eq 2) {
        [Environment]::SetEnvironmentVariable(
            $kv[0].Trim(),
            $kv[1].Trim(),
            'Process'
        )
    }
}

# -------------------------------------------
# Optional: show what we loaded
# -------------------------------------------
if ($Info) {
    Write-Host "Loaded variables from $envPath`n"
    foreach ($line in $envContent) {
        $trimmed = $line.Trim()
        if ($trimmed -eq '' -or $trimmed.StartsWith('#')) { continue }
        Write-Host $trimmed
    }
}

# -------------------------------------------
# -Test : write test.txt under $GLOBAL_OUTPUT\<programName>
# -------------------------------------------
if ($Test) {
    $globalOutput = $env:GLOBAL_OUTPUT
    if (-not $globalOutput) {
        Write-Error "GLOBAL_OUTPUT is not set in .env (needed for -Test)"
        exit 1
    }

    $programName = [IO.Path]::GetFileNameWithoutExtension($MyInvocation.MyCommand.Name)

    $targetDir = Join-Path $globalOutput $programName
    $targetFile = Join-Path $targetDir 'test.txt'

    if (-not (Test-Path $targetDir)) {
        New-Item -ItemType Directory -Path $targetDir -Force | Out-Null
    }

    $timestamp = (Get-Date).ToString('yyyy-MM-dd HH:mm:ss')
    "Test file generated by $programName on $timestamp" | Set-Content -Path $targetFile

    Write-Host "Test file written to $targetFile"
}
